# This Github Action will build and publish images to Azure Container Registry(ACR), from where the published images will be
# automatically pushed to the trusted registry, Microsoft Container Registry(MCR).

name: Building and Pushing to MCR
on:
  workflow_dispatch:
    inputs:
      imageVersion:
        description: 'Image version to be published'
        type: string

permissions:
      id-token: write
      contents: read

env:
  # `public` indicates images to MCR wil be publicly available, and will be removed in the final MCR images
  REGISTRY_REPO: public/aks/fleet

jobs:
  prepare-variables:
    runs-on: ubuntu-latest
    outputs:
      image_version: ${{ steps.vars.outputs.image_version }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: 'Set output variables'
        id: vars
        run: |
          # set the image version
          IMAGE_VERSION=${{ inputs.imageVersion }}
          if [ -z "$IMAGE_VERSION" ]; then
            IMAGE_VERSION=`git describe --tags $(git rev-list --tags --max-count=1)`
            echo "The user input image version is empty, will use the latest tag $IMAGE_VERSION."
          fi
          echo "::set-output name=image_version::$IMAGE_VERSION"

          # NOTE(mainred): As exporting a variable from a secret is not possible, the shared variable registry obtained
          # from AZURE_REGISTRY secret is not exported from here.

  publish-images:
    runs-on: ubuntu-latest
    needs: prepare-variables
    steps:
      - uses: actions/checkout@v2
      - name: 'OIDC Login to Azure Public Cloud'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: 'Login the ACR'
        run: az acr login -n ${{ secrets.AZURE_REGISTRY }}
      - name: Build and publish hub-net-controller-manager
        run: |
          make docker-build-hub-net-controller-manager
        env:
          HUB_NET_CONTROLLER_MANAGER_IMAGE_VERSION: ${{ needs.prepare-variables.outputs.image_version }}
          REGISTRY: ${{ secrets.AZURE_REGISTRY }}/${{ env.REGISTRY_REPO}}
      - name: Build and publish member-net-controller-manager
        run: |
          make docker-build-member-net-controller-manager
        env:
          HUB_NET_CONTROLLER_MANAGER_IMAGE_VERSION: ${{ needs.prepare-variables.outputs.image_version }}
          REGISTRY: ${{ secrets.AZURE_REGISTRY }}/${{ env.REGISTRY_REPO}}
      - name: Build and publish mcs-controller-manager
        run: |
          make docker-build-mcs-controller-manager
        env:
          HUB_NET_CONTROLLER_MANAGER_IMAGE_VERSION: ${{ needs.prepare-variables.outputs.image_version }}
          REGISTRY: ${{ secrets.AZURE_REGISTRY }}/${{ env.REGISTRY_REPO}}
