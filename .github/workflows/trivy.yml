name: Trivy vulnerability scanner
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      - release-*
    paths-ignore: [docs/**, "**.md", "**.mdx", "**.png", "**.jpg"]

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  HUB_NET_CONTROLLER_MANAGER_IMAGE_NAME : hub-net-controller-manager
  MEMBER_NET_CONTROLLER_MANAGER_IMAGE_NAME: member-net-controller-manager
  MCS_CONTROLLER_MANAGER_IMAGE_NAME: mcs-controller-manager

  GO_VERSION: '1.18'

  # TODO: once fleet repo is public, we could remove these env variables.
  GOPROXY: ${{ secrets.GOPROXY }}
  GOPRIVATE: ${{ secrets.GOPRIVATE }}
  GONOPROXY: none

jobs:
  export-registry:
    runs-on: ubuntu-20.04
    outputs:
      registry: ${{ steps.export.outputs.registry }}
    steps:
      - id: export
        run: |
          # registry must be in lowercase
          # store the images under dev
          echo "::set-output name=registry::$(echo "${{ env.REGISTRY }}/${{ github.repository }}/dev" | tr [:upper:] [:lower:])"
  scan-images:
    needs: export-registry
    env:
      REGISTRY: ${{ needs.export-registry.outputs.registry }}
    runs-on: ubuntu-20.04
    steps:
      - name: Set up Go ${{ env.GO_VERSION }}
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to ${{ env.REGISTRY }}
        uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: generate image version on timestamp
        run: echo IMAGE_VERSION=main-$(date +%s) >> $GITHUB_ENV

      - name: Build ${{ env.HUB_NET_CONTROLLER_MANAGER_IMAGE_NAME}}
        run: |
          make docker-build-hub-net-controller-manager
        env:
          REGISTRY: ${{ env.REGISTRY}}
          IMAGE_NAME: ${{ env.HUB_NET_CONTROLLER_MANAGER_IMAGE_NAME}}
          IMAGE_VERSION: ${{ env.IMAGE_VERSION }}

      - name: Build ${{ env.MEMBER_NET_CONTROLLER_MANAGER_IMAGE_NAME}}
        run: |
          make docker-build-member-net-controller-manager
        env:
          REGISTRY: ${{ env.REGISTRY}}
          IMAGE_NAME: ${{ env.MEMBER_NET_CONTROLLER_MANAGER_IMAGE_NAME}}
          IMAGE_VERSION: ${{ env.IMAGE_VERSION }}

      - name: Build ${{ env.MCS_CONTROLLER_MANAGER_IMAGE_NAME}}
        run: |
          make docker-build-mcs-controller-manager
        env:
          REGISTRY: ${{ env.REGISTRY}}
          IMAGE_NAME: ${{ env.MCS_CONTROLLER_MANAGER_IMAGE_NAME}}
          IMAGE_VERSION: ${{ env.IMAGE_VERSION }}

      - name: Scan ${{ env.REGISTRY }}/${{ env.HUB_NET_CONTROLLER_MANAGER_IMAGE_NAME }}:${{ env.IMAGE_VERSION }}
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.HUB_NET_CONTROLLER_MANAGER_IMAGE_NAME }}:${{ env.IMAGE_VERSION }}
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          timeout: '5m0s'

      - name: Scan ${{ env.REGISTRY }}/${{ env.MEMBER_NET_CONTROLLER_MANAGER_IMAGE_NAME }}:${{ env.IMAGE_VERSION }}
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.MEMBER_NET_CONTROLLER_MANAGER_IMAGE_NAME }}:${{ env.IMAGE_VERSION }}
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          timeout: '5m0s'

      - name: Scan ${{ env.REGISTRY }}/${{ env.MCS_CONTROLLER_MANAGER_IMAGE_NAME }}:${{ env.IMAGE_VERSION }}
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.MCS_CONTROLLER_MANAGER_IMAGE_NAME }}:${{ env.IMAGE_VERSION }}
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          timeout: '5m0s'
