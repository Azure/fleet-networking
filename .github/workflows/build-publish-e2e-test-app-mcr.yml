# This Github Action will build and publish the E2E test app image to Azure Container Registry (ACR), from
# where the published images will be automatically pushed to the trusted registry, 
# Microsoft Container Registry (MCR).

name: Building and Pushing E2E Test App Image to MCR
on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'The Fleet networking release to use for building the image; default is the latest release'
        required: false
        type: string
      image_tag:
        description: 'The E2E test app image tag; default is v0.1.0'
        required: false
        type: string
        default: 'v0.1.0'

permissions:
  id-token: write
  contents: read

env:
  # `public` indicates images to MCR wil be publicly available, and will be removed in the final MCR images
  REGISTRY_REPO: public/aks/fleet

  GO_VERSION: '1.18'

  # TODO: once fleet repo is public, we could remove these env variables.
  GOPROXY: ${{ secrets.GOPROXY }}
  GOPRIVATE: ${{ secrets.GOPRIVATE }}
  GONOPROXY: none

jobs:
  prepare-variables:
    runs-on: ubuntu-latest
    outputs:
      release_tag: ${{ steps.vars.outputs.release_tag }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: 'Set output variables'
        id: vars
        run: |
          # set the image version
          RELEASE_TAG=${{ inputs.release_tag }}
          if [ -z "$RELEASE_TAG" ]; then
            RELEASE_TAG=`git describe --tags $(git rev-list --tags --max-count=1)`
            echo "The user input release tag is empty, will use the latest tag $RELEASE_TAG."
          fi
          echo "::set-output name=release_tag::$RELEASE_TAG"

          # NOTE(mainred): As exporting a variable from a secret is not possible, the shared variable registry obtained
          # from AZURE_REGISTRY secret is not exported from here.

  publish-images:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go ${{ env.GO_VERSION }}
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GO_VERSION }}
      - uses: actions/checkout@v2
        with:
          ref: ${{ needs.prepare-variables.outputs.release_tag }}
      # reference: https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/configuring-openid-connect-in-azure
      - name: 'OIDC Login to Azure Public Cloud'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: 'Login the ACR'
        run: az acr login -n ${{ secrets.AZURE_REGISTRY }}
      - name: Build and publish E2E test app image
        run: |
          make docker-build-e2e-test-app
        env:
          E2E_TEST_APP_IMAGE_VERSION: ${{ inputs.image_tag }}
          REGISTRY: ${{ secrets.AZURE_REGISTRY }}/${{ env.REGISTRY_REPO}}

